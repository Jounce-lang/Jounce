@client
fn AnimatedCard(props: CardProps) -> JSX {
    let styles = css! {
        @keyframes slideIn {
            from {
                transform: translateY(-20px);
                opacity: 0;
            }
            to {
                transform: translateY(0);
                opacity: 1;
            }
        }

        @keyframes pulse {
            0% {
                transform: scale(1);
            }
            50% {
                transform: scale(1.05);
            }
            100% {
                transform: scale(1);
            }
        }

        .card {
            background: white;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            animation: slideIn 0.3s ease;
            transition: all 0.2s ease;

            &:hover {
                box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
                transform: translateY(-2px);
            }

            &:active {
                transform: translateY(0);
            }

            & .title {
                font-size: 24px;
                font-weight: bold;
                margin-bottom: 10px;
                color: #1a1a1a;

                &:hover {
                    color: #4f46e5;
                    animation: pulse 0.5s ease;
                }
            }

            & .subtitle {
                font-size: 16px;
                color: #666;
                margin-bottom: 15px;
            }

            & .content {
                color: #333;
                line-height: 1.6;

                @media (max-width: 768px) {
                    font-size: 14px;
                    line-height: 1.5;
                }

                @media (min-width: 1024px) {
                    font-size: 18px;
                    line-height: 1.8;
                }

                & p {
                    margin-bottom: 10px;

                    &:last-child {
                        margin-bottom: 0;
                    }
                }
            }

            & .actions {
                display: flex;
                gap: 10px;
                margin-top: 20px;

                @media (max-width: 768px) {
                    flex-direction: column;
                    gap: 8px;
                }
            }

            @media (max-width: 768px) {
                padding: 15px;
                border-radius: 6px;
            }

            @media (min-width: 1024px) {
                padding: 30px;
                border-radius: 12px;
            }
        }

        .button {
            background: #4f46e5;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 6px;
            cursor: pointer;
            transition: all 0.2s ease;

            &:hover {
                background: #4338ca;
                transform: scale(1.05);
            }

            &:active {
                transform: scale(0.95);
            }

            &:disabled {
                opacity: 0.5;
                cursor: not-allowed;
            }

            @media (max-width: 768px) {
                padding: 8px 16px;
                font-size: 14px;
            }
        }

        .badge {
            display: inline-block;
            padding: 4px 12px;
            border-radius: 12px;
            font-size: 12px;
            font-weight: 600;

            &.primary {
                background: #4f46e5;
                color: white;
            }

            &.success {
                background: #10b981;
                color: white;
            }

            &.warning {
                background: #f59e0b;
                color: white;
            }

            &:hover {
                animation: pulse 0.3s ease;
            }
        }
    };

    <div class={styles.card}>
        <div class={styles.title}>{props.title}</div>
        <div class={styles.subtitle}>{props.subtitle}</div>
        <div class={styles.content}>
            <p>{props.content}</p>
        </div>
        <div class={styles.actions}>
            <button class={styles.button}>Primary Action</button>
            <button class={styles.button}>Secondary Action</button>
        </div>
        <span class={styles.badge + " " + styles.primary}>New</span>
    </div>
}

@client
fn ResponsiveLayout() -> JSX {
    let styles = css! {
        @keyframes fadeIn {
            from {
                opacity: 0;
            }
            to {
                opacity: 1;
            }
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
            animation: fadeIn 0.5s ease;

            @media (max-width: 768px) {
                padding: 10px;
            }

            @media (min-width: 1024px) and (max-width: 1440px) {
                max-width: 1000px;
            }
        }

        .grid {
            display: grid;
            grid-template-columns: repeat(3, 1fr);
            gap: 20px;

            @media (max-width: 768px) {
                grid-template-columns: 1fr;
                gap: 10px;
            }

            @media (min-width: 768px) and (max-width: 1024px) {
                grid-template-columns: repeat(2, 1fr);
                gap: 15px;
            }

            & .grid-item {
                background: white;
                padding: 20px;
                border-radius: 8px;
                transition: transform 0.2s ease;

                &:hover {
                    transform: scale(1.02);
                }

                & .item-title {
                    font-size: 18px;
                    margin-bottom: 10px;

                    &:hover {
                        color: #4f46e5;
                    }
                }
            }
        }

        .header {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 40px 20px;
            text-align: center;
            border-radius: 8px;
            margin-bottom: 30px;

            & h1 {
                font-size: 48px;
                margin-bottom: 10px;

                @media (max-width: 768px) {
                    font-size: 32px;
                }

                &:hover {
                    animation: pulse 0.5s ease;
                }
            }

            & p {
                font-size: 20px;
                opacity: 0.9;

                @media (max-width: 768px) {
                    font-size: 16px;
                }
            }
        }
    };

    <div class={styles.container}>
        <div class={styles.header}>
            <h1>Advanced CSS Features</h1>
            <p>Testing nesting, media queries, and animations</p>
        </div>
        <div class={styles.grid}>
            <div class={styles.gridItem}>
                <div class={styles.itemTitle}>Feature 1</div>
                <p>Content here</p>
            </div>
            <div class={styles.gridItem}>
                <div class={styles.itemTitle}>Feature 2</div>
                <p>Content here</p>
            </div>
            <div class={styles.gridItem}>
                <div class={styles.itemTitle}>Feature 3</div>
                <p>Content here</p>
            </div>
        </div>
    </div>
}

@client
fn App() -> JSX {
    let styles = css! {
        .app {
            min-height: 100vh;
            background: #f5f5f5;
            padding: 20px;

            @media (prefers-color-scheme: dark) {
                background: #1a1a1a;
            }
        }
    };

    <div class={styles.app}>
        <ResponsiveLayout />
        <AnimatedCard
            title="Advanced CSS Test"
            subtitle="Sprint 2 Features"
            content="This component tests CSS nesting, media queries, keyframe animations, pseudo-classes, and compound selectors."
        />
    </div>
}

fn main() {
    render(App, "#app");
}

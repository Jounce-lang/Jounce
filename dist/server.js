// Auto-generated Jounce Server Bundle
// DO NOT EDIT - Generated by Jounce compiler

const { HttpServer, loadWasm } = require('./server-runtime.js');
const fs = require('fs');
const path = require('path');

// Load WebAssembly module
const wasmPath = path.join(__dirname, 'app.wasm');
const wasmBytes = fs.readFileSync(wasmPath);
const wasmModule = new WebAssembly.Module(wasmBytes);
const wasmInstance = new WebAssembly.Instance(wasmModule, {
  env: {
    memory: new WebAssembly.Memory({ initial: 256, maximum: 256 }),
  }
});

// Server function implementations
// Shared utility functions
module.exports.App = function() {
  return h('div', { class: "container" }, h('h1', "Color Picker ðŸŽ¨"), h('div', { class: "color-preview-box" }, h('div', { class: "preview default-color" }, null)), h('div', { class: "color-info" }, h('div', { class: "hex-display" }, h('span', { class: "label" }, "HEX:"), h('span', { class: "value" }, "#8040C0")), h('div', { class: "rgb-display" }, h('span', { class: "label" }, "RGB:"), h('span', { class: "value" }, "rgb(128, 64, 192)"))), h('div', { class: "sliders" }, h('div', { class: "slider-group" }, h('label', { class: "slider-label" }, h('span', { class: "color-name" }, "Red"), h('span', { class: "color-value" }, "128")), h('input', { type: "range", class: "slider red-slider", min: "0", max: "255", value: "128" }, null)), h('div', { class: "slider-group" }, h('label', { class: "slider-label" }, h('span', { class: "color-name" }, "Green"), h('span', { class: "color-value" }, "64")), h('input', { type: "range", class: "slider green-slider", min: "0", max: "255", value: "64" }, null)), h('div', { class: "slider-group" }, h('label', { class: "slider-label" }, h('span', { class: "color-name" }, "Blue"), h('span', { class: "color-value" }, "192")), h('input', { type: "range", class: "slider blue-slider", min: "0", max: "255", value: "192" }, null))), h('div', { class: "info" }, h('p', "This is App 2: A color picker demonstration with RGB sliders."), h('p', "The preview shows a nice purple color (RGB: 128, 64, 192)."), h('p', "Interactive sliders coming soon with signal and computed values!")));

}

module.exports.main = function() {
  console.log("App 2: Color Picker started!");
  console.log("Rendering color picker with RGB sliders");
  let app_html = App();
  return console.log("Color picker component created successfully!");

}

// RPC Server Setup
// Auto-generated RPC server handlers
const server = new HttpServer(process.env.PORT || 3000);

// Start RPC server
server.start();
console.log(`RPC server listening on port ${server.port}`);

//# sourceMappingURL=server.js.map

{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "Jounce",
  "scopeName": "source.jnc",
  "patterns": [
    {
      "include": "#comments"
    },
    {
      "include": "#keywords"
    },
    {
      "include": "#strings"
    },
    {
      "include": "#numbers"
    },
    {
      "include": "#types"
    },
    {
      "include": "#functions"
    },
    {
      "include": "#components"
    },
    {
      "include": "#jsx"
    },
    {
      "include": "#reactive"
    }
  ],
  "repository": {
    "comments": {
      "patterns": [
        {
          "name": "comment.line.double-slash.jnc",
          "match": "//.*$"
        },
        {
          "name": "comment.block.jnc",
          "begin": "/\\*",
          "end": "\\*/"
        }
      ]
    },
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.jnc",
          "match": "\\b(if|else|for|while|loop|break|continue|return|match)\\b"
        },
        {
          "name": "keyword.declaration.jnc",
          "match": "\\b(let|const|fn|component|use|server|client)\\b"
        },
        {
          "name": "keyword.other.jnc",
          "match": "\\b(await|async|pub|mod)\\b"
        },
        {
          "name": "storage.modifier.jnc",
          "match": "\\b(mut|ref)\\b"
        }
      ]
    },
    "strings": {
      "patterns": [
        {
          "name": "string.quoted.double.jnc",
          "begin": "\"",
          "end": "\"",
          "patterns": [
            {
              "name": "constant.character.escape.jnc",
              "match": "\\\\."
            },
            {
              "include": "#string-interpolation"
            }
          ]
        },
        {
          "name": "string.quoted.single.jnc",
          "begin": "'",
          "end": "'",
          "patterns": [
            {
              "name": "constant.character.escape.jnc",
              "match": "\\\\."
            }
          ]
        }
      ]
    },
    "string-interpolation": {
      "patterns": [
        {
          "name": "meta.embedded.expression.jnc",
          "begin": "\\{",
          "end": "\\}",
          "patterns": [
            {
              "include": "$self"
            }
          ]
        }
      ]
    },
    "numbers": {
      "patterns": [
        {
          "name": "constant.numeric.float.jnc",
          "match": "\\b\\d+\\.\\d+([eE][+-]?\\d+)?\\b"
        },
        {
          "name": "constant.numeric.integer.jnc",
          "match": "\\b\\d+\\b"
        },
        {
          "name": "constant.numeric.hex.jnc",
          "match": "\\b0x[0-9a-fA-F]+\\b"
        }
      ]
    },
    "types": {
      "patterns": [
        {
          "name": "support.type.primitive.jnc",
          "match": "\\b(Int|Float|String|Bool|Array|Map|Set|Option|Result|Any)\\b"
        },
        {
          "name": "entity.name.type.jnc",
          "match": "\\b[A-Z][a-zA-Z0-9_]*\\b"
        }
      ]
    },
    "functions": {
      "patterns": [
        {
          "name": "entity.name.function.jnc",
          "match": "\\b([a-z_][a-zA-Z0-9_]*)\\s*(?=\\()"
        },
        {
          "name": "support.function.builtin.jnc",
          "match": "\\b(print|println|console\\.log|console\\.error|console\\.warn)\\b"
        }
      ]
    },
    "components": {
      "patterns": [
        {
          "name": "meta.component.jnc",
          "begin": "\\b(component)\\s+([A-Z][a-zA-Z0-9_]*)",
          "beginCaptures": {
            "1": {
              "name": "keyword.declaration.jnc"
            },
            "2": {
              "name": "entity.name.type.component.jnc"
            }
          },
          "end": "(?<=\\})",
          "patterns": [
            {
              "include": "$self"
            }
          ]
        }
      ]
    },
    "jsx": {
      "patterns": [
        {
          "name": "meta.jsx.element.jnc",
          "begin": "<([a-z][a-zA-Z0-9_-]*|[A-Z][a-zA-Z0-9_]*)",
          "beginCaptures": {
            "1": {
              "name": "entity.name.tag.jsx.jnc"
            }
          },
          "end": "(/?>)",
          "patterns": [
            {
              "include": "#jsx-attributes"
            }
          ]
        },
        {
          "name": "meta.jsx.closing-tag.jnc",
          "begin": "</([a-z][a-zA-Z0-9_-]*|[A-Z][a-zA-Z0-9_]*)",
          "beginCaptures": {
            "1": {
              "name": "entity.name.tag.jsx.jnc"
            }
          },
          "end": ">"
        },
        {
          "name": "meta.jsx.expression.jnc",
          "begin": "\\{",
          "end": "\\}",
          "patterns": [
            {
              "include": "$self"
            }
          ]
        }
      ]
    },
    "jsx-attributes": {
      "patterns": [
        {
          "name": "entity.other.attribute-name.jsx.jnc",
          "match": "([a-zA-Z_][a-zA-Z0-9_-]*)(?==)"
        },
        {
          "include": "#strings"
        },
        {
          "include": "#jsx"
        }
      ]
    },
    "reactive": {
      "patterns": [
        {
          "name": "support.class.reactive.jnc",
          "match": "\\b(Signal|Computed|Effect|Resource|Store)\\b"
        },
        {
          "name": "support.function.reactive.jnc",
          "match": "\\b(get|set|update|subscribe|unsubscribe)\\b"
        }
      ]
    }
  }
}
